blueprint:
  name: Hue Random White Strobe (Randomized, per-light)
  description: Make selected Hue lights strobe pure white with randomized timing so they do not flash in sync.
  domain: script
  input:
    target_lights:
      name: Target Hue Lights
      description: Select the Hue lights to strobe
      selector:
        entity:
          domain: light
          multiple: true
    flashes:
      name: Number of Flashes
      description: How many times each light should flash
      default: 20
      selector:
        number:
          min: 1
          max: 500
          step: 1
          mode: slider
    min_delay:
      name: Minimum Delay (ms)
      description: Minimum random delay between on/off (in milliseconds)
      default: 100
      selector:
        number:
          min: 10
          max: 2000
          step: 10
          unit_of_measurement: ms
    max_delay:
      name: Maximum Delay (ms)
      description: Maximum random delay between on/off (in milliseconds)
      default: 300
      selector:
        number:
          min: 20
          max: 5000
          step: 10
          unit_of_measurement: ms

variables:
  min_d: !input min_delay
  max_d: !input max_delay

sequence:
  - parallel:
      - repeat:
          for_each: !input target_lights
          sequence:
            # capture the current light into a local variable so nested repeats can reference it
            - variables:
                light_entity: "{{ repeat.item }}"
            - repeat:
                count: !input flashes
                sequence:
                  - service: light.turn_on
                    target:
                      entity_id: "{{ light_entity }}"
                    data:
                      brightness: 255
                      color_temp: 153
                  # random delay between min_d and max_d (converted to seconds)
                  - delay: "{{ ((range(min_d | int, max_d | int) | random) / 1000) | round(3) }}"
                  - service: light.turn_off
                    target:
                      entity_id: "{{ light_entity }}"
                  - delay: "{{ ((range(min_d | int, max_d | int) | random) / 1000) | round(3) }}"
mode: restart
